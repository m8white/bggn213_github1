---
title: "Class 5: Data Viz with ggplot"
author: "Matt White"
format: pdf
---

R has lots of ways to make figures and graphs in particular.
One that comes with R out of the box is called **"base" R** = the `plot()` function

```{r}
plot(cars)
```

A very popular package in this area is called **ggplot2**.

Before I can use any add-on package like this, I must install it with the `install.packages("ggplot2")` command/function.

Then to use the package, I need to load it with a `library(ggplot2)` call.

```{r}
library(ggplot2)

ggplot(cars) + aes(x = speed, y = dist) + geom_point()
```

For "simple" plots like this one, base R code will be much shorter than ggplot code. 

Every ggplot has at least 3 layers
- **data** (the stuff you want to plot. always a data.frame for ggplot)
- **aes**thetics (mapping of columns from your data frame to your plot)
- **geom**etries (there are tons of these. basic ones are `geom_point()`, `geom_line()`, `geom_col()`)

Let's fit a model and show it on my plot:


```{r}
ggplot(cars) + 
  aes(x = speed, y = dist) + 
  geom_point() +
  geom_line()
```

```{r}
ggplot(cars) + 
  aes(x = speed, y = dist) + 
  geom_point() +
  geom_smooth()
```

make a scatter plot (points) of mpg vs displacement
```{r}
head(mtcars)
ggplot(mtcars) + aes(x = mpg, y = disp) + geom_point()
```

now set size = horsepower

```{r}
head(mtcars)
ggplot(mtcars) + aes(x = mpg, y = disp, size = hp) + geom_point()

ggplot(mtcars) + aes(x = mpg, y = disp, size = hp, color = am) + geom_point()
```

Now color all points blue

```{r}
head(mtcars)
ggplot(mtcars) + aes(x = mpg, y = disp, size = hp) + geom_point()

ggplot(mtcars) + aes(x = mpg, y = disp, size = hp) + geom_point(color = "blue")
```




```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

```{r}
nrow(genes)
colnames(genes)
ncol(genes)
table(genes$State)
127/nrow(genes)*100
table(genes$State)/nrow(genes)*100
```

The `table()` function is super useful to tell me how many entries of each type there are


```{r}
p <- ggplot(genes, aes(x = Condition1, y = Condition2, col=State)) + geom_point()
p

#saving the plot as "p" will allow for easier addition of layers later

p + scale_colour_manual(values = c("blue", "gray", "red")) + labs(title = "Gene Expression Changes Upon Drug Treatment", x = "Control(no drug)", y = "Drug Treatment")

#The labs function uses titles =, x and y= for axes
```

Key Learning Points
Saving plots with **ggsave()**
D9fferejt plot "types" with different `geoms_*()`
Faceting with facet_wrap()
Multi-plot layout with the **patchwork** package (in section 10 of in-lab worksheet if want to explore)

```{r}
ggplot(mtcars) + aes(mpg, disp) + geom_point()

ggsave("myplot.pdf")

#pdf is higher resolution than png
```



